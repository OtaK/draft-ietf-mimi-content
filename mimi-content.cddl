mimiContent = [
  replaces: null / MessageId,
  topicId: bstr,
  expires: uint .size 4,
  inReplyTo: null / InReplyTo,
  lastSeen: [* MessageId],
  extensions: {* name => value },
  nestedPart: NestedPart
]

NestedPart = [
  disposition: uint .size 1,
  language: tstr,
  partIndex: uint .size 2,
  ( NullPart // SinglePart // ExternalPart // MultiPart)
]

NullPart = ( cardinality: nullpart )

SinglePart = (  
    cardinality: single,
    contentType: tstr,
    content: bstr
)

ExternalPart = (
    cardinality: external,
    contentType: tstr,
    url: tstr #6.32,
    expires: uint .size 4,
    encAlg: uint .size 2,
    key: bstr,
    nonce: bstr,
    aad: bstr,
    hashAlg: uint .size 1,
    contentHash: bstr,
    description: tstr
)

MultiPart = (
    cardinality: multi,
    partSemantics: chooseOne / singleUnit / processAll,
    parts: [2* NestedPart]
)

InReplyTo = [
  message: MessageId,
  hashAlg: uint .size 8,
  hash: bstr
]

MessageId = bstr .size 32           ; MessageId is derived from SHA256 hash
Timestamp = #6.62(uint .size 8)     ; milliseconds since start of UNIX epoch
name = tstr .size (1..255)
value = bstr .size (0..4095)

nullpart = 0
single   = 1
external = 2
multi    = 3

chooseOne  = 0
singleUnit = 1
processAll = 2
